package model;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Random;


/**
 * 
 * - It's the back-end of Jotto game and responsible for sending request to specific URL,
 *    maintaining response data ,and providing access to data to the front-end, JottoGUI. 
 * 		Rep invatiant: 
 * 			puzzleId is final.
 * 			puzzle should be > 0
 * 	
 */
public class JottoModel {
	
	private final Integer puzzleID;
	
	/**
	 *  Constructor of the JottoModel generating a random puzzle ID 
	 */
	
	public JottoModel(int puzzleId){
		this.puzzleID = puzzleId; 
		checkRep();
	}

	/**
	 *  Constructor of the JottoModel with default puzzle id 16952
	 */
	
	public JottoModel(){
		this.puzzleID = new Random().nextInt(1999999)+1; 
		checkRep();
	}
	
	/**
	 * check the rep invariant of JottoModel
	 */
	private void checkRep() {
		assert puzzleID > 0:"puzzle id should be > 0";  
	}

	/**
	 * -  Send a URL request to http://courses.csail.mit.edu/6.005/
	 *      	jotto.py?puzzle=[puzzle#]&guess=[5-letter-dictionary word]; 
	 *     then, read back the server response, either a error message 
	 *     such as error 0, Ill-formatted request , error 1, Non-number puzzle ID,
	 *     or error 2, Invalid guess.(Length of guess != 5 or guess is not a dictionary word).
	 *     or a correct guess with guess [in common] [correct position] in response 
	 *     ,and finally return the response.
	 *    
	 * - Grammar of server response ::= GUESS | ERROR 
	 *    	GUESS := guess [1-5] [1-5] 
	 *   	ERROR := error [1-3] 
	 * 
	 * @param a non-empty string without length specified.
	 * @return a string representation of server response 
	 *  
	 */
	public  String makeGuess(String guess) {
		
		// Send request to the URL address  
		try {
			URL jotto = new URL("http://courses.csail.mit.edu/6.005/jotto.py?"
					+ "puzzle="+puzzleID
					+ "&guess="+guess);
			
			// Get the response of server
			try {
				BufferedReader in = new BufferedReader(new InputStreamReader(jotto.openStream()));
				String result = in.readLine();
				if(result != null){
						return result;
				}
			} catch (IOException e) {
				System.err.println("connection error of server with puzzle id "+ puzzleID);
				e.printStackTrace();
			}
			
		} catch (MalformedURLException e) {
			System.err.println("Provided URL error");
			e.printStackTrace();
		}
		return null;
	}
	


	/**
	 * Handle the string message of server response and parse it into a readable information.
	 * It will return either the number of correct letters to user 
	 * or it will return a certain error message.
	 * @param a non-empty string response from the server 
	 * @return an array of string interpretation of server response 
	 */
	public String[] handleInput(String response){
		 if(response!= null){
			 try {
				 String[] strings = response.split(" ");
				 String[] results = new String[2];
				 if(strings[0].equals("error")){
			
					 String errorType = strings[1].replaceAll("[^\\d]", "");
					  // return a error state to user 
					 
					 if(errorType.equals("0")){
						 
						 results[0] = "Illegal request formatted";
						 results[1] = "Try again";
						 return results;
					 }else if(errorType.equals("1")){
						 
						 results[0] = "No such puzzle ID, please enter a new one";
						 results[1] = "Try again";
						 return results;
					 }else if(errorType.equals("2") ){
						 results[0] = "Invalid guess ";
						 results[1] = "Try again";
						 return results;
					 }
					 
				 }else if(strings[0].equals("guess") ){
					// make the right guess 
					 if(strings[2].equals("5")){
						 // user guess the word correctly
						 results = new String[1];
						 results[0] = "You are f***king awesome!!";
						 return results;
					 }else{
						 results[0] = strings[1];
						 results[1] = strings[2];
						 return results;
					 }
				 }else{
					 return null;
				 }
			} catch (Exception e) {
				e.printStackTrace();
			}
		 }
		 return null;
	}
	
	/**
	 * Getter of the random puzzle ID
	 * @return a random generated by JottoModel
	 */
	public int getId(){
		return puzzleID;
	}
	
}
